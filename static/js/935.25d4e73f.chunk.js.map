{"version":3,"file":"static/js/935.25d4e73f.chunk.js","mappings":"+LAsWA,EAhWc,WACV,IAAMA,GAAQC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,MAAMA,KAAK,IAC9CG,GAAgBF,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,MAAMG,aAAa,IAC9DC,GAAcH,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,MAAMI,WAAW,IAC1DC,GAAcJ,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,MAAMK,WAAW,IAE1DC,GAAUL,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMK,QAAQD,OAAO,IACpDE,GAAQP,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMK,QAAQC,KAAK,IAEhDC,GAAcR,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMQ,SAASD,WAAW,IAE7DE,GAAcV,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMU,YAAYD,WAAW,IAElEE,EAAeC,OAAOC,QAAQf,GAE9BgB,EAAyBH,EAAaI,QAAO,+BAAEC,EAAG,KAAO,YAAO,QAAQC,KAAKD,EAAI,IACjFE,EAAqBN,OAAOO,YAAYL,GACxCM,EAAyBR,OAAOS,OAAOH,GAAoBI,KAAI,SAAAC,GAAC,OAAQA,EAAE,EAAE,IAE1EC,EAAc,WAChBV,EAAyBH,EAAaI,QAAO,+BAAEC,EAAG,KAAO,YAAO,QAAQC,KAAKD,EAAI,IACjFE,EAAqBN,OAAOO,YAAYL,GACxCM,EAAwBR,OAAOS,OAAOH,GAAoBI,KAAI,SAAAC,GAAC,OAAQA,EAAE,EAAE,GAC/E,GAEAE,EAAAA,EAAAA,YAAU,WACND,GACJ,GAAG,KAEHC,EAAAA,EAAAA,YAAU,WACND,GACJ,GAAG,CAAC1B,IA0TJ,OACI,yBAzTgB,WAChB,IAAI4B,EAAU,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAElD,OACI,iBAAKC,UAAU,QAAO,UACjBD,EAAQJ,KAAI,SAACC,EAAGK,GAAC,OAAK,iBAAuBD,UAAS,UAAKC,EAAI,IAAM,EAAI,QAAU,QAAO,wFAC/BA,EAAI,IAAMzB,EAAc,YAAc,MAAO,UACpGD,EAAY2B,SAASD,EAAI,KAAOR,EAAsBS,SAASD,EAAI,IAC9D,gBAAKD,UAAU,iBACf,KAELzB,EAAY2B,SAASD,EAAI,IAAMR,EAAsBS,SAASD,EAAI,IAC7D,gBAAKD,UAAU,cAAa,UAAC,qBAC7B,KAEJ1B,EAAc6B,OAAO,GAAG,KAAOF,EAAI,IAAMnB,GACnCA,GAAeR,EAAcQ,EAAc,KAAOmB,EAAI,GACxD,gBAAKD,UAAU,iBACf,KAELpB,GACgB,UAAVD,IACCF,GACF,gBAAKuB,UAAU,iBAAgB,SAAED,EAAQE,KACzC,KAELrB,GACMqB,EAAI,IAAM,GACA,UAAVtB,GACD,gBAAKqB,UAAU,UAAS,SAAC,MACzB,KAELpB,GACMqB,EAAI,IAAM,GACA,UAAVtB,GACAF,GACD,gBAAKuB,UAAU,UAAS,SAAC,MACzB,KAELpB,GACY,IAANqB,GACU,UAAVtB,IACCF,GACF,gBAAKuB,UAAU,iBAAgB,SAAC,MAChC,OAvCuBC,EAAI,IAwC/B,IAELF,EAAQJ,KAAI,SAACC,EAAGK,GAAC,OAAK,iBAAuBD,UAAS,UAAKC,EAAI,IAAM,EAAI,QAAU,QAAO,wFAC/BA,EAAI,IAAMzB,EAAc,YAAc,MAAO,UACpGD,EAAY2B,SAASD,EAAI,KAAOR,EAAsBS,SAASD,EAAI,IAC9D,gBAAKD,UAAU,iBACf,KAELzB,EAAY2B,SAASD,EAAI,IAAMR,EAAsBS,SAASD,EAAI,IAC7D,gBAAKD,UAAU,cAAa,UAAC,qBAC7B,KAEJ1B,EAAc6B,OAAO,GAAG,KAAOF,EAAI,IAAMnB,GACnCA,GAAeR,EAAcQ,EAAc,KAAOmB,EAAI,GACxD,gBAAKD,UAAU,iBACf,KAELpB,GACMqB,EAAI,IAAM,IACA,UAAVtB,GACD,gBAAKqB,UAAU,UAAS,SAAC,MACzB,KAELpB,GACMqB,EAAI,IAAM,IACA,UAAVtB,GACAF,GACD,gBAAKuB,UAAU,UAAS,SAAC,MACzB,KAELpB,GACY,IAANqB,GACU,UAAVtB,IACCF,GACF,gBAAKuB,UAAU,iBAAgB,SAAC,MAChC,OAjCuBC,EAAI,KAkC/B,IAELF,EAAQJ,KAAI,SAACC,EAAGK,GAAC,OAAK,iBAAwBD,UAAS,UAAKC,EAAI,IAAM,EAAI,QAAU,QAAO,yFAC/BA,EAAI,KAAOzB,EAAc,YAAc,MAAO,UACtGD,EAAY2B,SAASD,EAAI,MAAQR,EAAsBS,SAASD,EAAI,KAC/D,gBAAKD,UAAU,iBACf,KAELzB,EAAY2B,SAASD,EAAI,KAAOR,EAAsBS,SAASD,EAAI,KAC9D,gBAAKD,UAAU,cAAa,UAAC,qBAC7B,KAEJ1B,EAAc6B,OAAO,GAAG,KAAOF,EAAI,KAAOnB,GACpCA,GAAeR,EAAcQ,EAAc,KAAOmB,EAAI,IACxD,gBAAKD,UAAU,iBACf,KAELpB,GACMqB,EAAI,KAAO,IACD,UAAVtB,GACD,gBAAKqB,UAAU,UAAS,SAAC,MACzB,KAELpB,GACMqB,EAAI,KAAO,IACD,UAAVtB,GACAF,GACD,gBAAKuB,UAAU,UAAS,SAAC,MACzB,KAELpB,GACY,IAANqB,GACU,UAAVtB,IACCF,GACF,gBAAKuB,UAAU,iBAAgB,SAAC,MAChC,OAjCuBC,EAAI,KAkC/B,IAELF,EAAQJ,KAAI,SAACC,EAAGK,GAAC,OAAK,iBAAwBD,UAAS,UAAKC,EAAI,IAAM,EAAI,QAAU,QAAO,yFAC/BA,EAAI,KAAOzB,EAAc,YAAc,MAAO,UACtGD,EAAY2B,SAASD,EAAI,MAAQR,EAAsBS,SAASD,EAAI,KAC/D,gBAAKD,UAAU,iBACf,KAELzB,EAAY2B,SAASD,EAAI,KAAOR,EAAsBS,SAASD,EAAI,KAC9D,gBAAKD,UAAU,cAAa,UAAC,qBAC7B,KAEJ1B,EAAc6B,OAAO,GAAG,KAAOF,EAAI,KAAOnB,GACpCA,GAAeR,EAAcQ,EAAc,KAAOmB,EAAI,IACxD,gBAAKD,UAAU,iBACf,KAELpB,GACMqB,EAAI,KAAO,IACD,UAAVtB,GACD,gBAAKqB,UAAU,UAAS,SAAC,MACzB,KAELpB,GACMqB,EAAI,KAAO,IACD,UAAVtB,GACAF,GACD,gBAAKuB,UAAU,UAAS,SAAC,MACzB,KAELpB,GACY,IAANqB,GACU,UAAVtB,IACCF,GACF,gBAAKuB,UAAU,iBAAgB,SAAC,MAChC,OAjCuBC,EAAI,KAkC/B,IAELF,EAAQJ,KAAI,SAACC,EAAGK,GAAC,OAAK,iBAAwBD,UAAS,UAAKC,EAAI,IAAM,EAAI,QAAU,QAAO,yFAC/BA,EAAI,KAAOzB,EAAc,YAAc,MAAO,UACtGD,EAAY2B,SAASD,EAAI,MAAQR,EAAsBS,SAASD,EAAI,KAC/D,gBAAKD,UAAU,iBACf,KAELzB,EAAY2B,SAASD,EAAI,KAAOR,EAAsBS,SAASD,EAAI,KAC9D,gBAAKD,UAAU,cAAa,UAAC,qBAC7B,KAEJ1B,EAAc6B,OAAO,GAAG,KAAOF,EAAI,KAAOnB,GACpCA,GAAeR,EAAcQ,EAAc,KAAOmB,EAAI,IACxD,gBAAKD,UAAU,iBACf,KAELpB,GACMqB,EAAI,KAAO,IACD,UAAVtB,GACD,gBAAKqB,UAAU,UAAS,SAAC,MACzB,KAELpB,GACMqB,EAAI,KAAO,IACD,UAAVtB,GACAF,GACD,gBAAKuB,UAAU,UAAS,SAAC,MACzB,KAELpB,GACY,IAANqB,GACU,UAAVtB,IACCF,GACF,gBAAKuB,UAAU,iBAAgB,SAAC,MAChC,OAjCuBC,EAAI,KAkC/B,IAELF,EAAQJ,KAAI,SAACC,EAAGK,GAAC,OAAK,iBAAwBD,UAAS,UAAKC,EAAI,IAAM,EAAI,QAAU,QAAO,yFAC/BA,EAAI,KAAOzB,EAAc,YAAc,MAAO,UACtGD,EAAY2B,SAASD,EAAI,MAAQR,EAAsBS,SAASD,EAAI,KAC/D,gBAAKD,UAAU,iBACf,KAELzB,EAAY2B,SAASD,EAAI,KAAOR,EAAsBS,SAASD,EAAI,KAC9D,gBAAKD,UAAU,cAAa,UAAC,qBAC7B,KAEJ1B,EAAc6B,OAAO,GAAG,KAAOF,EAAI,KAAOnB,GACpCA,GAAeR,EAAcQ,EAAc,KAAOmB,EAAI,IACxD,gBAAKD,UAAU,iBACf,KAELpB,GACMqB,EAAI,KAAO,IACD,UAAVtB,GACD,gBAAKqB,UAAU,UAAS,SAAC,MACzB,KAELpB,GACMqB,EAAI,KAAO,IACD,UAAVtB,GACAF,GACD,gBAAKuB,UAAU,UAAS,SAAC,MACzB,KAELpB,GACY,IAANqB,GACU,UAAVtB,IACCF,GACF,gBAAKuB,UAAU,iBAAgB,SAAC,MAChC,OAjCuBC,EAAI,MAkC/B,IAELF,EAAQJ,KAAI,SAACC,EAAGK,GAAC,OAAK,iBAAwBD,UAAS,UAAKC,EAAI,IAAM,EAAI,QAAU,QAAO,yFAC/BA,EAAI,KAAOzB,EAAc,YAAc,MAAO,UACtGD,EAAY2B,SAASD,EAAI,MAAQR,EAAsBS,SAASD,EAAI,KAC/D,gBAAKD,UAAU,iBACf,KAELzB,EAAY2B,SAASD,EAAI,KAAOR,EAAsBS,SAASD,EAAI,KAC9D,gBAAKD,UAAU,cAAa,UAAC,qBAC7B,KAEJ1B,EAAc6B,OAAO,GAAG,KAAOF,EAAI,KAAOnB,GACpCA,GAAeR,EAAcQ,EAAc,KAAOmB,EAAI,IACxD,gBAAKD,UAAU,iBACf,KAELpB,GACMqB,EAAI,KAAO,IACD,UAAVtB,GACD,gBAAKqB,UAAU,UAAS,SAAC,MACzB,KAELpB,GACMqB,EAAI,KAAO,IACD,UAAVtB,GACAF,GACD,gBAAKuB,UAAU,UAAS,SAAC,MACzB,KAELpB,GACY,IAANqB,GACU,UAAVtB,IACCF,GACF,gBAAKuB,UAAU,iBAAgB,SAAC,MAChC,OAjCuBC,EAAI,MAkC/B,IAELF,EAAQJ,KAAI,SAACC,EAAGK,GAAC,OAAK,iBAAwBD,UAAS,UAAKC,EAAI,IAAM,EAAI,QAAU,QAAO,yFAC/BA,EAAI,KAAOzB,EAAc,YAAc,MAAO,UACtGD,EAAY2B,SAASD,EAAI,MAAQR,EAAsBS,SAASD,EAAI,KAC/D,gBAAKD,UAAU,iBACf,KAELzB,EAAY2B,SAASD,EAAI,KAAOR,EAAsBS,SAASD,EAAI,KAC9D,gBAAKD,UAAU,cAAa,UAAC,qBAC7B,KAEJ1B,EAAc6B,OAAO,GAAG,KAAOF,EAAI,KAAOnB,GACpCA,GAAeR,EAAcQ,EAAc,KAAOmB,EAAI,IACxD,gBAAKD,UAAU,iBACf,KAELpB,GAAyB,UAAVD,GACV,gBAAKqB,UAAU,UAAS,SAAED,EAAQE,KAClC,KAELrB,GACgB,UAAVD,GACAF,GACD,gBAAKuB,UAAU,UAAS,SAAED,EAAQ,EAAIE,KACtC,KAELrB,GACMqB,EAAI,KAAO,IACD,UAAVtB,GACD,gBAAKqB,UAAU,UAAS,SAAC,MACzB,KAELpB,GACMqB,EAAI,KAAO,IACD,UAAVtB,GACAF,GACD,gBAAKuB,UAAU,UAAS,SAAC,MACzB,KAELpB,GACY,IAANqB,GACU,UAAVtB,IACCF,GACF,gBAAKuB,UAAU,iBAAgB,SAAC,MAChC,OA3CuBC,EAAI,MA4C/B,MAGlB,CAISG,IAGb,C","sources":["components/board/Board.jsx"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { useSelector } from \"react-redux\"\r\nimport { useEffect } from \"react\"\r\n\r\nimport \"./board.sass\"\r\n\r\nconst Board = () => {\r\n    const board = useSelector(state => state.board.board)\r\n    const highlightMove = useSelector(state => state.board.highlightMove)\r\n    const moveSquares = useSelector(state => state.board.moveSquares)\r\n    const pieceSquare = useSelector(state => state.board.pieceSquare)\r\n\r\n    const sandbox = useSelector(state => state.options.sandbox)\r\n    const color = useSelector(state => state.options.color)\r\n\r\n    const coordinates = useSelector(state => state.behavior.coordinates)\r\n\r\n    const currentMove = useSelector(state => state.progression.currentMove)\r\n\r\n    let boardEntries = Object.entries(board)\r\n\r\n    let filteredOccupiedRender = boardEntries.filter(([key, value]) => !/empty/.test(key))\r\n    let justOccupiedRender = Object.fromEntries(filteredOccupiedRender)\r\n    let occupiedSquaresRender =  Object.values(justOccupiedRender).map(a => a = a[0])\r\n\r\n    const recordBoard = () => {  \r\n        filteredOccupiedRender = boardEntries.filter(([key, value]) => !/empty/.test(key))\r\n        justOccupiedRender = Object.fromEntries(filteredOccupiedRender)\r\n        occupiedSquaresRender = Object.values(justOccupiedRender).map(a => a = a[0])\r\n    }\r\n\r\n    useEffect(() => {\r\n        recordBoard()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        recordBoard()\r\n    }, [board])\r\n\r\n    const renderBoard = () => {\r\n        let letters = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"]\r\n\r\n        return (\r\n            <div className=\"board\">\r\n                {letters.map((a, i) => <div key={i + 1 * 300} className={`${i % 2 === 0 ? \"white\" : \"black\"} \r\n                                                                          ${i + 1 === pieceSquare ? \"highlight\" : null}`}>\r\n                    {moveSquares.includes(i + 1) && !occupiedSquaresRender.includes(i + 1) \r\n                        ? <div className=\"activeSquare\"></div> \r\n                        : null}\r\n\r\n                    {moveSquares.includes(i + 1) && occupiedSquaresRender.includes(i + 1) \r\n                        ? <div className=\"enemySquare\"><div></div></div> \r\n                        : null}\r\n\r\n                    {(highlightMove.slice(-1)[0] === i + 1 && !currentMove) \r\n                        || (currentMove && highlightMove[currentMove - 1] === i + 1) \r\n                        ? <div className=\"lastMadeMove\"></div> \r\n                        : null}\r\n\r\n                    {coordinates \r\n                        && color === \"black\" \r\n                        && !sandbox \r\n                        ? <div className=\"reverseLetters\">{letters[i]}</div> \r\n                        : null}\r\n\r\n                    {coordinates \r\n                        && i + 1 === 8 \r\n                        && color === \"white\" \r\n                        ? <div className=\"numbers\">8</div> \r\n                        : null}\r\n\r\n                    {coordinates \r\n                        && i + 1 === 8 \r\n                        && color === \"black\" \r\n                        && sandbox \r\n                        ? <div className=\"numbers\">1</div> \r\n                        : null}\r\n\r\n                    {coordinates \r\n                        && i === 0 \r\n                        && color === \"black\" \r\n                        && !sandbox \r\n                        ? <div className=\"reverseNumbers\">8</div> \r\n                        : null}\r\n                </div>)}\r\n\r\n                {letters.map((a, i) => <div key={i + 9 * 300} className={`${i % 2 !== 0 ? \"white\" : \"black\"} \r\n                                                                          ${i + 9 === pieceSquare ? \"highlight\" : null}`}>\r\n                    {moveSquares.includes(i + 9) && !occupiedSquaresRender.includes(i + 9) \r\n                        ? <div className=\"activeSquare\"></div> \r\n                        : null}\r\n\r\n                    {moveSquares.includes(i + 9) && occupiedSquaresRender.includes(i + 9) \r\n                        ? <div className=\"enemySquare\"><div></div></div> \r\n                        : null}\r\n\r\n                    {(highlightMove.slice(-1)[0] === i + 9 && !currentMove) \r\n                        || (currentMove && highlightMove[currentMove - 1] === i + 9) \r\n                        ? <div className=\"lastMadeMove\"></div> \r\n                        : null}\r\n\r\n                    {coordinates \r\n                        && i + 9 === 16 \r\n                        && color === \"white\" \r\n                        ? <div className=\"numbers\">7</div> \r\n                        : null}\r\n\r\n                    {coordinates \r\n                        && i + 9 === 16 \r\n                        && color === \"black\" \r\n                        && sandbox \r\n                        ? <div className=\"numbers\">2</div> \r\n                        : null}\r\n\r\n                    {coordinates \r\n                        && i === 0 \r\n                        && color === \"black\" \r\n                        && !sandbox \r\n                        ? <div className=\"reverseNumbers\">7</div> \r\n                        : null}\r\n                </div>)}\r\n\r\n                {letters.map((a, i) => <div key={i + 17 * 300} className={`${i % 2 === 0 ? \"white\" : \"black\"} \r\n                                                                           ${i + 17 === pieceSquare ? \"highlight\" : null}`}>\r\n                    {moveSquares.includes(i + 17) && !occupiedSquaresRender.includes(i + 17) \r\n                        ? <div className=\"activeSquare\"></div> \r\n                        : null}\r\n\r\n                    {moveSquares.includes(i + 17) && occupiedSquaresRender.includes(i + 17) \r\n                        ? <div className=\"enemySquare\"><div></div></div> \r\n                        : null}\r\n\r\n                    {(highlightMove.slice(-1)[0] === i + 17 && !currentMove) \r\n                        || (currentMove && highlightMove[currentMove - 1] === i + 17) \r\n                        ? <div className=\"lastMadeMove\"></div> \r\n                        : null}\r\n\r\n                    {coordinates \r\n                        && i + 17 === 24 \r\n                        && color === \"white\" \r\n                        ? <div className=\"numbers\">6</div> \r\n                        : null}\r\n\r\n                    {coordinates \r\n                        && i + 17 === 24 \r\n                        && color === \"black\" \r\n                        && sandbox \r\n                        ? <div className=\"numbers\">3</div> \r\n                        : null}\r\n\r\n                    {coordinates \r\n                        && i === 0 \r\n                        && color === \"black\" \r\n                        && !sandbox \r\n                        ? <div className=\"reverseNumbers\">6</div> \r\n                        : null}\r\n                </div>)}\r\n\r\n                {letters.map((a, i) => <div key={i + 25 * 300} className={`${i % 2 !== 0 ? \"white\" : \"black\"} \r\n                                                                           ${i + 25 === pieceSquare ? \"highlight\" : null}`}>\r\n                    {moveSquares.includes(i + 25) && !occupiedSquaresRender.includes(i + 25) \r\n                        ? <div className=\"activeSquare\"></div> \r\n                        : null}\r\n\r\n                    {moveSquares.includes(i + 25) && occupiedSquaresRender.includes(i + 25) \r\n                        ? <div className=\"enemySquare\"><div></div></div> \r\n                        : null}\r\n\r\n                    {(highlightMove.slice(-1)[0] === i + 25 && !currentMove) \r\n                        || (currentMove && highlightMove[currentMove - 1] === i + 25) \r\n                        ? <div className=\"lastMadeMove\"></div> \r\n                        : null}\r\n\r\n                    {coordinates \r\n                        && i + 25 === 32 \r\n                        && color === \"white\" \r\n                        ? <div className=\"numbers\">5</div> \r\n                        : null}\r\n\r\n                    {coordinates \r\n                        && i + 25 === 32 \r\n                        && color === \"black\" \r\n                        && sandbox \r\n                        ? <div className=\"numbers\">4</div> \r\n                        : null}\r\n\r\n                    {coordinates \r\n                        && i === 0 \r\n                        && color === \"black\" \r\n                        && !sandbox \r\n                        ? <div className=\"reverseNumbers\">5</div> \r\n                        : null}\r\n                </div>)}\r\n\r\n                {letters.map((a, i) => <div key={i + 33 * 300} className={`${i % 2 === 0 ? \"white\" : \"black\"} \r\n                                                                           ${i + 33 === pieceSquare ? \"highlight\" : null}`}>\r\n                    {moveSquares.includes(i + 33) && !occupiedSquaresRender.includes(i + 33) \r\n                        ? <div className=\"activeSquare\"></div> \r\n                        : null}\r\n\r\n                    {moveSquares.includes(i + 33) && occupiedSquaresRender.includes(i + 33) \r\n                        ? <div className=\"enemySquare\"><div></div></div> \r\n                        : null}\r\n\r\n                    {(highlightMove.slice(-1)[0] === i + 33 && !currentMove) \r\n                        || (currentMove && highlightMove[currentMove - 1] === i + 33) \r\n                        ? <div className=\"lastMadeMove\"></div> \r\n                        : null}\r\n\r\n                    {coordinates \r\n                        && i + 33 === 40 \r\n                        && color === \"white\" \r\n                        ? <div className=\"numbers\">4</div> \r\n                        : null}\r\n\r\n                    {coordinates \r\n                        && i + 33 === 40 \r\n                        && color === \"black\" \r\n                        && sandbox \r\n                        ? <div className=\"numbers\">5</div> \r\n                        : null}\r\n\r\n                    {coordinates \r\n                        && i === 0 \r\n                        && color === \"black\" \r\n                        && !sandbox \r\n                        ? <div className=\"reverseNumbers\">4</div> \r\n                        : null}\r\n                </div>)}\r\n\r\n                {letters.map((a, i) => <div key={i + 41 * 300} className={`${i % 2 !== 0 ? \"white\" : \"black\"} \r\n                                                                           ${i + 41 === pieceSquare ? \"highlight\" : null}`}>\r\n                    {moveSquares.includes(i + 41) && !occupiedSquaresRender.includes(i + 41) \r\n                        ? <div className=\"activeSquare\"></div> \r\n                        : null}\r\n\r\n                    {moveSquares.includes(i + 41) && occupiedSquaresRender.includes(i + 41) \r\n                        ? <div className=\"enemySquare\"><div></div></div> \r\n                        : null}\r\n\r\n                    {(highlightMove.slice(-1)[0] === i + 41 && !currentMove) \r\n                        || (currentMove && highlightMove[currentMove - 1] === i + 41) \r\n                        ? <div className=\"lastMadeMove\"></div> \r\n                        : null}\r\n\r\n                    {coordinates \r\n                        && i + 41 === 48 \r\n                        && color === \"white\" \r\n                        ? <div className=\"numbers\">3</div> \r\n                        : null}\r\n\r\n                    {coordinates \r\n                        && i + 41 === 48 \r\n                        && color === \"black\" \r\n                        && sandbox \r\n                        ? <div className=\"numbers\">6</div> \r\n                        : null}\r\n\r\n                    {coordinates \r\n                        && i === 0 \r\n                        && color === \"black\" \r\n                        && !sandbox \r\n                        ? <div className=\"reverseNumbers\">3</div> \r\n                        : null}\r\n                </div>)}\r\n\r\n                {letters.map((a, i) => <div key={i + 49 * 300} className={`${i % 2 === 0 ? \"white\" : \"black\"} \r\n                                                                           ${i + 49 === pieceSquare ? \"highlight\" : null}`}>\r\n                    {moveSquares.includes(i + 49) && !occupiedSquaresRender.includes(i + 49) \r\n                        ? <div className=\"activeSquare\"></div> \r\n                        : null}\r\n\r\n                    {moveSquares.includes(i + 49) && occupiedSquaresRender.includes(i + 49) \r\n                        ? <div className=\"enemySquare\"><div></div></div> \r\n                        : null}\r\n\r\n                    {(highlightMove.slice(-1)[0] === i + 49 && !currentMove) \r\n                        || (currentMove && highlightMove[currentMove - 1] === i + 49) \r\n                        ? <div className=\"lastMadeMove\"></div> \r\n                        : null}\r\n\r\n                    {coordinates \r\n                        && i + 49 === 56 \r\n                        && color === \"white\" \r\n                        ? <div className=\"numbers\">2</div> \r\n                        : null}\r\n\r\n                    {coordinates \r\n                        && i + 49 === 56 \r\n                        && color === \"black\" \r\n                        && sandbox \r\n                        ? <div className=\"numbers\">7</div> \r\n                        : null}\r\n\r\n                    {coordinates \r\n                        && i === 0 \r\n                        && color === \"black\" \r\n                        && !sandbox \r\n                        ? <div className=\"reverseNumbers\">2</div> \r\n                        : null}\r\n                </div>)}\r\n\r\n                {letters.map((a, i) => <div key={i + 57 * 300} className={`${i % 2 !== 0 ? \"white\" : \"black\"} \r\n                                                                           ${i + 57 === pieceSquare ? \"highlight\" : null}`} >\r\n                    {moveSquares.includes(i + 57) && !occupiedSquaresRender.includes(i + 57) \r\n                        ? <div className=\"activeSquare\"></div> \r\n                        : null}\r\n\r\n                    {moveSquares.includes(i + 57) && occupiedSquaresRender.includes(i + 57) \r\n                        ? <div className=\"enemySquare\"><div></div></div> \r\n                        : null}\r\n\r\n                    {(highlightMove.slice(-1)[0] === i + 57 && !currentMove) \r\n                        || (currentMove && highlightMove[currentMove - 1] === i + 57) \r\n                        ? <div className=\"lastMadeMove\"></div> \r\n                        : null}\r\n\r\n                    {coordinates && color === \"white\" \r\n                        ? <div className=\"letters\">{letters[i]}</div> \r\n                        : null}\r\n\r\n                    {coordinates \r\n                        && color === \"black\" \r\n                        && sandbox \r\n                        ? <div className=\"letters\">{letters[7 - i]}</div> \r\n                        : null}\r\n\r\n                    {coordinates \r\n                        && i + 57 === 64 \r\n                        && color === \"white\" \r\n                        ? <div className=\"numbers\">1</div> \r\n                        : null}\r\n\r\n                    {coordinates \r\n                        && i + 57 === 64 \r\n                        && color === \"black\" \r\n                        && sandbox \r\n                        ? <div className=\"numbers\">8</div> \r\n                        : null}\r\n\r\n                    {coordinates \r\n                        && i === 0 \r\n                        && color === \"black\" \r\n                        && !sandbox \r\n                        ? <div className=\"reverseNumbers\">1</div> \r\n                        : null}\r\n                </div>)}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {renderBoard()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Board"],"names":["board","useSelector","state","highlightMove","moveSquares","pieceSquare","sandbox","options","color","coordinates","behavior","currentMove","progression","boardEntries","Object","entries","filteredOccupiedRender","filter","key","test","justOccupiedRender","fromEntries","occupiedSquaresRender","values","map","a","recordBoard","useEffect","letters","className","i","includes","slice","renderBoard"],"sourceRoot":""}