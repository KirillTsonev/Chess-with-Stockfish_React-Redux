{"version":3,"file":"static/js/935.9a7f38ad.chunk.js","mappings":"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","sources":["components/board/Board.jsx"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport { useSelector } from \"react-redux\"\nimport { useEffect } from \"react\"\n\nimport \"./board.sass\"\n\nconst Board = () => {\n    const board = useSelector(state => state.board.board)\n    const highlightMove = useSelector(state => state.board.highlightMove)\n    const moveSquares = useSelector(state => state.board.moveSquares)\n    const pieceSquare = useSelector(state => state.board.pieceSquare)\n\n    const sandbox = useSelector(state => state.options.sandbox)\n    const color = useSelector(state => state.options.color)\n\n    const coordinates = useSelector(state => state.behavior.coordinates)\n\n    const currentMove = useSelector(state => state.progression.currentMove)\n\n    let boardEntries = Object.entries(board)\n\n    let filteredOccupiedRender = boardEntries.filter(([key, value]) => !/empty/.test(key))\n    let justOccupiedRender = Object.fromEntries(filteredOccupiedRender)\n    let occupiedSquaresRender =  Object.values(justOccupiedRender).map(a => a = a[0])\n\n    const recordBoard = () => {  \n        filteredOccupiedRender = boardEntries.filter(([key, value]) => !/empty/.test(key))\n        justOccupiedRender = Object.fromEntries(filteredOccupiedRender)\n        occupiedSquaresRender = Object.values(justOccupiedRender).map(a => a = a[0])\n    }\n\n    useEffect(() => {\n        recordBoard()\n    }, [])\n\n    useEffect(() => {\n        recordBoard()\n    }, [board])\n\n    const renderBoard = () => {\n        let letters = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"]\n\n        return (\n            <div className=\"board\">\n                {letters.map((a, i) => <div key={i + 1 * 100 + \"c\"} className={`${i % 2 === 0 ? \"white\" : \"black\"} \n                                                                                ${i + 1 === pieceSquare ? \"highlight\" : null}`}>\n                    {moveSquares.includes(i + 1) && !occupiedSquaresRender.includes(i + 1) \n                        ? <div className=\"activeSquare\"></div> \n                        : null}\n\n                    {moveSquares.includes(i + 1) && occupiedSquaresRender.includes(i + 1) \n                        ? <div className=\"enemySquare\"><div></div></div> \n                        : null}\n\n                    {(highlightMove.slice(-1)[0] === i + 1 && !currentMove) \n                        || (currentMove && highlightMove[currentMove - 1] === i + 1) \n                        ? <div className=\"lastMadeMove\"></div> \n                        : null}\n\n                    {coordinates \n                        && color === \"black\" \n                        && !sandbox \n                        ? <div className=\"reverseLetters\">{letters[i]}</div> \n                        : null}\n\n                    {coordinates \n                        && i + 1 === 8 \n                        && color === \"white\" \n                        ? <div className=\"numbers\">8</div> \n                        : null}\n\n                    {coordinates \n                        && i + 1 === 8 \n                        && color === \"black\" \n                        && sandbox \n                        ? <div className=\"numbers\">1</div> \n                        : null}\n\n                    {coordinates \n                        && i === 0 \n                        && color === \"black\" \n                        && !sandbox \n                        ? <div className=\"reverseNumbers\">8</div> \n                        : null}\n                </div>)}\n\n                {letters.map((a, i) => <div key={i + 9 * 100 + \"c\"} className={`${i % 2 !== 0 ? \"white\" : \"black\"} \n                                                                                ${i + 9 === pieceSquare ? \"highlight\" : null}`}>\n                    {moveSquares.includes(i + 9) && !occupiedSquaresRender.includes(i + 9) \n                        ? <div className=\"activeSquare\"></div> \n                        : null}\n\n                    {moveSquares.includes(i + 9) && occupiedSquaresRender.includes(i + 9) \n                        ? <div className=\"enemySquare\"><div></div></div> \n                        : null}\n\n                    {(highlightMove.slice(-1)[0] === i + 9 && !currentMove) \n                        || (currentMove && highlightMove[currentMove - 1] === i + 9) \n                        ? <div className=\"lastMadeMove\"></div> \n                        : null}\n\n                    {coordinates \n                        && i + 9 === 16 \n                        && color === \"white\" \n                        ? <div className=\"numbers\">7</div> \n                        : null}\n\n                    {coordinates \n                        && i + 9 === 16 \n                        && color === \"black\" \n                        && sandbox \n                        ? <div className=\"numbers\">2</div> \n                        : null}\n\n                    {coordinates \n                        && i === 0 \n                        && color === \"black\" \n                        && !sandbox \n                        ? <div className=\"reverseNumbers\">7</div> \n                        : null}\n                </div>)}\n\n                {letters.map((a, i) => <div key={i + 17 * 100 + \"c\"} className={`${i % 2 === 0 ? \"white\" : \"black\"} \n                                                                                 ${i + 17 === pieceSquare ? \"highlight\" : null}`}>\n                    {moveSquares.includes(i + 17) && !occupiedSquaresRender.includes(i + 17) \n                        ? <div className=\"activeSquare\"></div> \n                        : null}\n\n                    {moveSquares.includes(i + 17) && occupiedSquaresRender.includes(i + 17) \n                        ? <div className=\"enemySquare\"><div></div></div> \n                        : null}\n\n                    {(highlightMove.slice(-1)[0] === i + 17 && !currentMove) \n                        || (currentMove && highlightMove[currentMove - 1] === i + 17) \n                        ? <div className=\"lastMadeMove\"></div> \n                        : null}\n\n                    {coordinates \n                        && i + 17 === 24 \n                        && color === \"white\" \n                        ? <div className=\"numbers\">6</div> \n                        : null}\n\n                    {coordinates \n                        && i + 17 === 24 \n                        && color === \"black\" \n                        && sandbox \n                        ? <div className=\"numbers\">3</div> \n                        : null}\n\n                    {coordinates \n                        && i === 0 \n                        && color === \"black\" \n                        && !sandbox \n                        ? <div className=\"reverseNumbers\">6</div> \n                        : null}\n                </div>)}\n\n                {letters.map((a, i) => <div key={i + 25 * 100 + \"c\"} className={`${i % 2 !== 0 ? \"white\" : \"black\"} \n                                                                                 ${i + 25 === pieceSquare ? \"highlight\" : null}`}>\n                    {moveSquares.includes(i + 25) && !occupiedSquaresRender.includes(i + 25) \n                        ? <div className=\"activeSquare\"></div> \n                        : null}\n\n                    {moveSquares.includes(i + 25) && occupiedSquaresRender.includes(i + 25) \n                        ? <div className=\"enemySquare\"><div></div></div> \n                        : null}\n\n                    {(highlightMove.slice(-1)[0] === i + 25 && !currentMove) \n                        || (currentMove && highlightMove[currentMove - 1] === i + 25) \n                        ? <div className=\"lastMadeMove\"></div> \n                        : null}\n\n                    {coordinates \n                        && i + 25 === 32 \n                        && color === \"white\" \n                        ? <div className=\"numbers\">5</div> \n                        : null}\n\n                    {coordinates \n                        && i + 25 === 32 \n                        && color === \"black\" \n                        && sandbox \n                        ? <div className=\"numbers\">4</div> \n                        : null}\n\n                    {coordinates \n                        && i === 0 \n                        && color === \"black\" \n                        && !sandbox \n                        ? <div className=\"reverseNumbers\">5</div> \n                        : null}\n                </div>)}\n\n                {letters.map((a, i) => <div key={i + 33 * 100 + \"c\"} className={`${i % 2 === 0 ? \"white\" : \"black\"} \n                                                                                 ${i + 33 === pieceSquare ? \"highlight\" : null}`}>\n                    {moveSquares.includes(i + 33) && !occupiedSquaresRender.includes(i + 33) \n                        ? <div className=\"activeSquare\"></div> \n                        : null}\n\n                    {moveSquares.includes(i + 33) && occupiedSquaresRender.includes(i + 33) \n                        ? <div className=\"enemySquare\"><div></div></div> \n                        : null}\n\n                    {(highlightMove.slice(-1)[0] === i + 33 && !currentMove) \n                        || (currentMove && highlightMove[currentMove - 1] === i + 33) \n                        ? <div className=\"lastMadeMove\"></div> \n                        : null}\n\n                    {coordinates \n                        && i + 33 === 40 \n                        && color === \"white\" \n                        ? <div className=\"numbers\">4</div> \n                        : null}\n\n                    {coordinates \n                        && i + 33 === 40 \n                        && color === \"black\" \n                        && sandbox \n                        ? <div className=\"numbers\">5</div> \n                        : null}\n\n                    {coordinates \n                        && i === 0 \n                        && color === \"black\" \n                        && !sandbox \n                        ? <div className=\"reverseNumbers\">4</div> \n                        : null}\n                </div>)}\n\n                {letters.map((a, i) => <div key={i + 41 * 100 + \"c\"} className={`${i % 2 !== 0 ? \"white\" : \"black\"} \n                                                                                 ${i + 41 === pieceSquare ? \"highlight\" : null}`}>\n                    {moveSquares.includes(i + 41) && !occupiedSquaresRender.includes(i + 41) \n                        ? <div className=\"activeSquare\"></div> \n                        : null}\n\n                    {moveSquares.includes(i + 41) && occupiedSquaresRender.includes(i + 41) \n                        ? <div className=\"enemySquare\"><div></div></div> \n                        : null}\n\n                    {(highlightMove.slice(-1)[0] === i + 41 && !currentMove) \n                        || (currentMove && highlightMove[currentMove - 1] === i + 41) \n                        ? <div className=\"lastMadeMove\"></div> \n                        : null}\n\n                    {coordinates \n                        && i + 41 === 48 \n                        && color === \"white\" \n                        ? <div className=\"numbers\">3</div> \n                        : null}\n\n                    {coordinates \n                        && i + 41 === 48 \n                        && color === \"black\" \n                        && sandbox \n                        ? <div className=\"numbers\">6</div> \n                        : null}\n\n                    {coordinates \n                        && i === 0 \n                        && color === \"black\" \n                        && !sandbox \n                        ? <div className=\"reverseNumbers\">3</div> \n                        : null}\n                </div>)}\n\n                {letters.map((a, i) => <div key={i + 49 * 100 + \"c\"} className={`${i % 2 === 0 ? \"white\" : \"black\"} \n                                                                                 ${i + 49 === pieceSquare ? \"highlight\" : null}`}>\n                    {moveSquares.includes(i + 49) && !occupiedSquaresRender.includes(i + 49) \n                        ? <div className=\"activeSquare\"></div> \n                        : null}\n\n                    {moveSquares.includes(i + 49) && occupiedSquaresRender.includes(i + 49) \n                        ? <div className=\"enemySquare\"><div></div></div> \n                        : null}\n\n                    {(highlightMove.slice(-1)[0] === i + 49 && !currentMove) \n                        || (currentMove && highlightMove[currentMove - 1] === i + 49) \n                        ? <div className=\"lastMadeMove\"></div> \n                        : null}\n\n                    {coordinates \n                        && i + 49 === 56 \n                        && color === \"white\" \n                        ? <div className=\"numbers\">2</div> \n                        : null}\n\n                    {coordinates \n                        && i + 49 === 56 \n                        && color === \"black\" \n                        && sandbox \n                        ? <div className=\"numbers\">7</div> \n                        : null}\n\n                    {coordinates \n                        && i === 0 \n                        && color === \"black\" \n                        && !sandbox \n                        ? <div className=\"reverseNumbers\">2</div> \n                        : null}\n                </div>)}\n\n                {letters.map((a, i) => <div key={i + 57 * 100 + \"c\"} className={`${i % 2 !== 0 ? \"white\" : \"black\"} \n                                                                                 ${i + 57 === pieceSquare ? \"highlight\" : null}`} >\n                    {moveSquares.includes(i + 57) && !occupiedSquaresRender.includes(i + 57) \n                        ? <div className=\"activeSquare\"></div> \n                        : null}\n\n                    {moveSquares.includes(i + 57) && occupiedSquaresRender.includes(i + 57) \n                        ? <div className=\"enemySquare\"><div></div></div> \n                        : null}\n\n                    {(highlightMove.slice(-1)[0] === i + 57 && !currentMove) \n                        || (currentMove && highlightMove[currentMove - 1] === i + 57) \n                        ? <div className=\"lastMadeMove\"></div> \n                        : null}\n\n                    {coordinates && color === \"white\" \n                        ? <div className=\"letters\">{letters[i]}</div> \n                        : null}\n\n                    {coordinates \n                        && color === \"black\" \n                        && sandbox \n                        ? <div className=\"letters\">{letters[7 - i]}</div> \n                        : null}\n\n                    {coordinates \n                        && i + 57 === 64 \n                        && color === \"white\" \n                        ? <div className=\"numbers\">1</div> \n                        : null}\n\n                    {coordinates \n                        && i + 57 === 64 \n                        && color === \"black\" \n                        && sandbox \n                        ? <div className=\"numbers\">8</div> \n                        : null}\n\n                    {coordinates \n                        && i === 0 \n                        && color === \"black\" \n                        && !sandbox \n                        ? <div className=\"reverseNumbers\">1</div> \n                        : null}\n                </div>)}\n            </div>\n        )\n    }\n\n    return (\n        <div>\n            {renderBoard()}\n        </div>\n    )\n}\n\nexport default Board"],"names":["board","useSelector","state","highlightMove","moveSquares","pieceSquare","sandbox","options","color","coordinates","behavior","currentMove","progression","boardEntries","Object","entries","filteredOccupiedRender","filter","key","test","justOccupiedRender","fromEntries","occupiedSquaresRender","values","map","a","recordBoard","useEffect","letters","className","i","includes","slice","renderBoard"],"sourceRoot":""}